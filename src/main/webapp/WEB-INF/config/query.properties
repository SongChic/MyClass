##

## userDao
userDao.get=select * from myclass_member where mem_id = ?
userDao.idCheck=select count(*) from myclass_member where mem_id = ?
userDao.pwCheck=select count(*) from myclass_member where mem_id = ? and mem_pw = ?
userDao.setting=update myclass_member set main_color = ? where id = ?


## schedule Dao
scheduleDao.get=select * from myclass_schedule
scheduleDao.edit=update myclass_schedule set created = ? where id = ?

## teacher Dao
teacherDao.setMember=insert into myclass_member (mem_id, mem_pw, name, email, phone, user_type, gender, birthday_year, birthday_month, birthday_day, slogan) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
teacherDao.update=update myclass_member set name = ?, email = ?, phone = ?, gender = ?, birthday_year = ?, birthday_month = ?, birthday_day = ?, profile = ? where id = ?
teacherDao.findStudent=select * from myclass_member m left join myclass_classes_member_mapper map on m.id = map.student_id where map.student_id is null and user_type = 3
teacherDao.getTeacherId=select teacher_id from myclass_classes_mapper where id = ?
teacherDao.myStudentList=select * from myclass_member m join myclass_classes_member_mapper map on m.id = map.student_id where teacher_id = ?
teacherDao.addClassStudent=insert into myclass_classes_member_mapper (teacher_id, student_id, teacher_class_id, state) values(?, ?, ?, 1)

## parent Dao
parentDao.setMember=insert into myclass_member (mem_id, mem_pw, name, email, phone, user_type, gender, birthday_year, birthday_month, birthday_day) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
parentDao.setStudentMapper=insert into myclass_parent_mapper (parent_id, student_id) values (?, ?)

## studnet Dao
studentDao.findStudent=select * from myclass_member where name like
studentDao.setMember=insert into myclass_member (mem_id, mem_pw, name, email, phone, user_type, gender, birthday_year, birthday_month, birthday_day, school) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
studentDao.getTeacher=select * from myclass_member m join myclass_classes_member_mapper map on m.id = map.teacher_id where map.student_id = ?
studentDao.findTeacher=select * from myclass_member mem left join myclass_classes_member_mapper map on mem.id = map.teacher_id where mem.user_type = 1 and mem.name like ? and map.teacher_id is null
studentDao.classRequest=insert into myclass_classes_member_mapper (teacher_id, student_id, state, student_state) values (?, ?, 1, 0)
studentDao.requestCancel=delete from myclass_classes_member_mapper where teacher_id = ? and student_id = ?


## classes Dao
classesDao.finished=UPDATE myclass_classes SET finished=1 where date(end_date) < date(now())
classesDao.setClasses=insert into myclass_classes (name, start_date, end_date, target, subject, summary, days, classes_view_type, color, picture, thumbnail, finished, max_num) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
classesDao.setClassesMapper=insert into myclass_classes_mapper (id, teacher_id) values (?, ?)
classesDao.getList=select mc.*, m.name as 'teacher_name', (select count(*) from myclass_classes_mapper where not exists (select * from myclass_classes_mapper where m.id = mcm.teacher_id)) as 'number' from myclass_classes mc join myclass_classes_mapper mcm on mc.id = mcm.id join myclass_member m on mcm.teacher_id = m.id where mcm.teacher_id = ? 

classesDao.get=select * from myclass_classes where id = ?
classesDao.edit=update myclass_classes set name = ?, start_date = ?, end_date = ?, target = ?, subject = ?, summary = ?, days = ?, classes_view_type = ?, color = ?, picture = ?, thumbnail = ?, finished = ?, max_num = ? where id = ?
classesDao.getWithTeacherId=select class.* from myclass_member mem join myclass_classes_mapper map on mem.id = map.teacher_id join myclass_classes class on map.id = class.id where mem.id = ?